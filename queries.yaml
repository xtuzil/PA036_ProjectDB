queries:

  # mongo options:
  #  collection:
  #    person
  #    speed_violation
  #  method:
  #    find
  #    findOne
  #    insertOne
  #    insertMany
  #    updateOne
  #    updateMany
  #    replaceOne
  #    deleteMany
  #    deleteOne
  #    count
  #  filter
  #  value

  - id: 1
    description: "Count person with age more than 40"
    postgres: SELECT COUNT(*) FROM person WHERE (data->>'age')::int > 40;
    mongo:
      collection: person
      method: count
      filter: '{ "age" : { "$gt" : 40 } }'
  - id: 2
    description: "Count person with age more than 40 (second way)"
    postgres: select count(*) from person where data @@ '$.age[0] > 40';
    mongo:
      collection: person
      method: count
      filter: '{ "age" : { "$gt" : 40 } }'
  - id: 3
    description: "Count person with contact +1 (966) 429-3818 (top level atribut contacts)"
    postgres: select count(*) from person where (data->'contacts')::jsonb ? '+1 (966) 429-3818';
    mongo:
      collection: person
      method: count
      filter: '{ "age" : { "$gt" : 40 } }'
  - id: 4
    description: "Select all license plates (nested select) - ZATIAL VYPIS VYSLEDKU LEN PRVY PRVOK"
    postgres: select jsonb_array_elements(data -> 'cars') -> 'license_plate' from person;
    mongo:
      collection: person
      method: count
      filter: '{ "age" : { "$gt" : 40 } }'
  - id: 5
    description: "Select all defects from all tech exams (more nested select) - ZATIAL VYPIS VYSLEDKU LEN PRVY PRVOK"
    postgres: select jsonb_array_elements(jsonb_array_elements(jsonb_array_elements(data -> 'cars') -> 'tech_exams') -> 'defects') from person;
    mongo:
      collection: person
      method: count
      filter: '{ "age" : { "$gt" : 40 } }'
  - id: 6
    description: "Count person with age 40 (with containment function)"
    postgres: 'SELECT count(*) from person where (data @> ''{"age": 40}'')::boolean = true;'
    mongo:
      collection: person
      method: count
      filter: '{ "age" : { "$gt" : 40 } }'
